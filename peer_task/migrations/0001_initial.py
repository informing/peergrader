# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-25 06:18
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Status',
            fields=[
                ('value', models.TextField(blank=True, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppealAssignment',
            fields=[
                ('submissionid', models.IntegerField(blank=True, db_column='submissionID', primary_key=True, serialize=False)),
                ('markerid', models.IntegerField(db_column='markerID')),
            ],
            options={
                'db_table': 'appeal_assignment',
            },
        ),
        migrations.CreateModel(
            name='Appealtype',
            fields=[
                ('value', models.TextField(blank=True, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'appealType',
            },
        ),
        migrations.CreateModel(
            name='AssignmentPasswordEntered',
            fields=[
                ('userid', models.IntegerField(db_column='userID', primary_key=True)),
                ('assignmentid', models.IntegerField(db_column='assignmentID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'assignment_password_entered',
            },
        ),
        migrations.CreateModel(
            name='Assignments',
            fields=[
                ('assignmentid', models.IntegerField(blank=True, db_column='assignmentID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('courseid', models.IntegerField(db_column='courseID')),
                ('displaypriority', models.IntegerField(db_column='displayPriority')),
                ('assignmenttype', models.CharField(db_column='assignmentType', max_length=64)),
                ('passwordmessage', models.TextField(blank=True, db_column='passwordMessage')),
                ('password', models.CharField(blank=True, max_length=255)),
                ('visibletostudents', models.TextField(db_column='visibleToStudents')),
            ],
            options={
                'db_table': 'assignments',
            },
        ),
        migrations.CreateModel(
            name='Calibrationstate',
            fields=[
                ('value', models.TextField(blank=True, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'calibrationState',
            },
        ),
        migrations.CreateModel(
            name='GroupPickerAssignment',
            fields=[
                ('assignmentid', models.IntegerField(blank=True, db_column='assignmentID', primary_key=True, serialize=False)),
                ('startdate', models.DateTimeField(db_column='startDate')),
                ('stopdate', models.DateTimeField(db_column='stopDate')),
            ],
            options={
                'db_table': 'group_picker_assignment',
            },
        ),
        migrations.CreateModel(
            name='GroupPickerAssignmentGroups',
            fields=[
                ('assignmentid', models.IntegerField(db_column='assignmentID', primary_key=True)),
                ('groupindex', models.IntegerField(db_column='groupIndex', primary_key=True, serialize=False)),
                ('grouptext', models.TextField(db_column='groupText')),
            ],
            options={
                'db_table': 'group_picker_assignment_groups',
            },
        ),
        migrations.CreateModel(
            name='GroupPickerAssignmentSelections',
            fields=[
                ('selectionid', models.IntegerField(blank=True, db_column='selectionID', primary_key=True, serialize=False)),
                ('assignmentid', models.IntegerField(db_column='assignmentID')),
                ('userid', models.IntegerField(db_column='userID')),
                ('groupindex', models.IntegerField(db_column='groupIndex')),
            ],
            options={
                'db_table': 'group_picker_assignment_selections',
            },
        ),
        migrations.CreateModel(
            name='JobNotifications',
            fields=[
                ('notificationid', models.IntegerField(blank=True, db_column='notificationID', primary_key=True, serialize=False)),
                ('courseid', models.IntegerField(db_column='courseID')),
                ('assignmentid', models.IntegerField(db_column='assignmentID')),
                ('job', models.TextField()),
                ('dateran', models.DateTimeField(db_column='dateRan')),
                ('success', models.TextField()),
                ('seen', models.TextField()),
                ('summary', models.TextField()),
                ('details', models.TextField()),
            ],
            options={
                'db_table': 'job_notifications',
            },
        ),
        migrations.AlterUniqueTogether(
            name='grouppickerassignmentselections',
            unique_together=set([('assignmentid', 'userid')]),
        ),
        migrations.AlterUniqueTogether(
            name='grouppickerassignmentgroups',
            unique_together=set([('assignmentid', 'groupindex')]),
        ),
        migrations.AlterUniqueTogether(
            name='assignmentpasswordentered',
            unique_together=set([('userid', 'assignmentid')]),
        ),
    ]
